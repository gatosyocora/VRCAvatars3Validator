name: Release

on:
  push:
    tags:
      - v*

  workflow_dispatch:

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  TOOL_NAME: VRCAvatars3Validator
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: set output data
        id: outputdata
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          echo ::set-output name=version::$VERSION
          echo ::set-output name=filedir::${TOOL_NAME}_$VERSION
          echo ::set-output name=filename::${TOOL_NAME}_$VERSION.unitypackage
      
      - name: git settings
        run: |
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.name "github-ci"
          git remote set-url origin https://gatosyocora:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          
      - name: copy readme & license
        run: |
          cp -f README.md ./Assets/VRCAvatars3Validator/README.md
          cp -f README.md.meta ./Assets/VRCAvatars3Validator/README.md.meta
          cp -f LICENSE ./Assets/VRCAvatars3Validator/LICENSE
          cp -f LICENSE.meta ./Assets/VRCAvatars3Validator/LICENSE.meta
          cp -f CHANGELOG.md ./Assets/VRCAvatars3Validator/CHANGELOG.md
          cp -f CHANGELOG.md.meta ./Assets/VRCAvatars3Validator/CHANGELOG.md.meta
          
      - name: git commit & push
        run: |
          git add .
          git commit -m "update files"
          
      - name: build unitypackage
        uses: game-ci/unity-builder@v2
        with:
          unityVersion: 2018.4.20f1
          buildMethod: UnityPackageExporter.Export
      
      - name: rename unitypackage
        run: |
          mv VRCAvatars3Validator.unitypackage ${{ steps.outputdata.outputs.filename }}
      
      - name: zip unitypackage
        run: |
          DIR=$(echo ${{ steps.outputdata.outputs.filedir }})
          mkdir $DIR
          cp -f ${{ steps.outputdata.outputs.filename }} $DIR/${{ steps.outputdata.outputs.filename }}
          cp -f README.md $DIR/README.md
          cp -f LICENSE $DIR/LICENSE
          cp -f CHANGELOG.md $DIR/CHANGELOG.md
          zip -r $DIR.zip $DIR
          
      - name: create release
        id: create-release
        uses: actions/create-release@v1.0.0
        with:
          tag_name: ${{ steps.outputdata.outputs.version }}
          release_name: ${{ steps.outputdata.outputs.version }}
          draft: false
          prerelease: false
          
      - name: upload unitypackage
        id: upload-unitypackage
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ steps.outputdata.outputs.filename }}
          asset_name: ${{ steps.outputdata.outputs.filename }}
          asset_content_type: application/zip
          
      - name: upload zip
        id: upload-zip
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./${{ steps.outputdata.outputs.filedir }}.zip
          asset_name: ${{ steps.outputdata.outputs.filedir }}.zip
          asset_content_type: application/zip
